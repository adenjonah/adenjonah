name: Update README

on:
  schedule:
    - cron: "0 0 */3 * *" # Every 3 days at midnight
  push:
    paths:
      - .github/workflows/update-readme.yml # Trigger when this file is updated
  workflow_dispatch: # Allow manual trigger

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Fetch top repositories based on commits and PRs
      - name: Fetch Commit and PR Data
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          # Define the ignore list as an array
          ignore_list=("adenjonah/adenjonah")

          # Fetch all repositories (including private and collaborations)
          repos=$(curl -s -H "Authorization: token $GH_TOKEN" \
            https://api.github.com/user/repos?per_page=100)

          echo "Fetched repositories data: $repos"

          # Parse repository names and filter out ignored ones
          parsed_repos=$(echo "$repos" | jq -r '.[] | .full_name')
          filtered_repos=()
          for repo in $parsed_repos; do
            if [[ ! " ${ignore_list[@]} " =~ " $repo " ]]; then
              filtered_repos+=("$repo")
            fi
          done
          echo "Filtered Repositories: ${filtered_repos[@]}"

          # Initialize top_repos
          top_repos=""

          for repo in "${filtered_repos[@]}"; do
            # Fetch commit count
            commits=$(curl -s -H "Authorization: token $GH_TOKEN" \
              "https://api.github.com/repos/$repo/commits?since=$(date -d '30 days ago' +%Y-%m-%d)" \
              | jq length)

            # Fetch PR count
            prs=$(curl -s -H "Authorization: token $GH_TOKEN" \
              "https://api.github.com/repos/$repo/pulls?state=all&per_page=100" \
              | jq '[.[] | select(.created_at >= "'$(date -d '30 days ago' +%Y-%m-%d)'")] | length')

            echo "Repo: $repo, Commits: $commits, PRs: $prs"

            # Track repositories with activity
            if [[ $commits -gt 0 || $prs -gt 0 ]]; then
              echo "$commits $prs $repo"
            fi
          done | sort -k1,2nr | head -n 3 | awk '{print $3}' > top_repos.txt

          echo "Top Repositories: $(cat top_repos.txt)"
          echo "::set-output name=top_repos::$(cat top_repos.txt)"

      # Step 3: Update the README file
      - name: Update README
        id: update-readme
        run: |
          top_repos=$(cat top_repos.txt)
          if [[ -z "$top_repos" ]]; then
            echo "No repositories with activity in the last 30 days. Skipping update."
            exit 0
          fi

          repos_links=""
          while IFS= read -r repo; do
            repo_name=$(basename "$repo") # Extract the repo name only
            repos_links="$repos_links, <a href=\"https://github.com/$repo\" target=\"_blank\"><b>$repo_name</b></a>"
          done <<< "$top_repos"

          # Remove leading ", " and append note
          repos_links="${repos_links:2}"
          repos_links="$repos_links (This list is updated automatically based on commits and PRs, checkout the <a href=\"https://github.com/adenjonah/adenjonah/blob/main/.github/workflows/update-readme.yml\" target=\"_blank\"><b>code here</b></a>)"

          sed -i "s|- ðŸ”­ Iâ€™m currently working on.*|- ðŸ”­ Iâ€™m currently working on $repos_links|" README.md

      # Step 4: Commit and push changes
      - name: Commit and Push Changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add README.md
          git commit -m "Update README with top repositories"
          git push
